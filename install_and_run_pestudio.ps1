# Define the download URL and file paths
$downloadUrl = "https://www.lo4d.com/get-file/pestudio/cabf5a70466bef296a0edb0abb230181/"
$downloadsFolder = [System.IO.Path]::Combine([System.Environment]::GetFolderPath("UserProfile"), "Downloads")
$fileName = "pestudio.zip"
$zipFilePath = [System.IO.Path]::Combine($downloadsFolder, $fileName)
$extractDir = [System.IO.Path]::Combine($downloadsFolder, "pestudio")

# Download the file with basic parsing to handle potential redirections
Write-Host "Downloading PeStudio to $downloadsFolder..."
Invoke-WebRequest -Uri $downloadUrl -OutFile $zipFilePath -UseBasicParsing

# Check if the download was successful and the file is not empty
if (!(Test-Path $zipFilePath) -or ((Get-Item $zipFilePath).Length -eq 0)) {
    Write-Host "Download failed or file is empty!"
    exit 1
}

# Create the extraction directory if it doesn't exist
Write-Host "Creating extraction directory..."
if (!(Test-Path $extractDir)) {
    New-Item -ItemType Directory -Force -Path $extractDir
}

# Extract the ZIP file using Expand-Archive
Write-Host "Extracting the file..."
try {
    Expand-Archive -LiteralPath $zipFilePath -DestinationPath $extractDir -Force
} catch {
    Write-Host "Extraction failed: $_"
    exit 1
}

# Find the executable file and run it
Write-Host "Running the application..."
$executable = Get-ChildItem -Path $extractDir -Filter *.exe -Recurse | Select-Object -First 1

if ($null -eq $executable) {
    Write-Host "Executable not found!"
    exit 1
}

# Run the executable
Start-Process -FilePath $executable.FullName

# Cleanup - optionally remove the downloaded ZIP file
Write-Host "Cleaning up..."
Remove-Item -Force $zipFilePath

Write-Host "Done!"
