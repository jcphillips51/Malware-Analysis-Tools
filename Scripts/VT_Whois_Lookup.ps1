# Define the VirusTotal API Key (replace with your actual API key)
$apiKey = "YOUR_API_KEY_HERE"

# Path to the file containing URLs (each URL on a new line)
$urlsFilePath = "C:\path\to\your\urls.txt"

# Check if the file exists
if (-not (Test-Path $urlsFilePath)) {
    Write-Error "File not found: $urlsFilePath"
    exit
}

# Function to perform WHOIS lookup for a domain
function Get-WhoisInfo {
    param (
        [string]$domain
    )
    
    # Perform the WHOIS lookup using the whois command-line tool
    $whoisInfo = whois $domain | Out-String

    if ($whoisInfo) {
        Write-Host "`n--- WHOIS Information for domain: $domain ---`n"
        Write-Host $whoisInfo
    } else {
        Write-Host "No WHOIS information found for domain: $domain"
    }
}

# Function to extract the domain from a URL
function Get-DomainFromUrl {
    param (
        [string]$url
    )

    try {
        $uri = New-Object System.Uri($url)
        return $uri.Host
    } catch {
        Write-Error "Invalid URL: $url"
        return $null
    }
}

# Read all URLs from the file
$urls = Get-Content -Path $urlsFilePath

# Iterate over each URL and query VirusTotal
foreach ($url in $urls) {
    # Trim any leading/trailing whitespace
    $url = $url.Trim()

    # Check if the URL is empty or invalid
    if (-not [string]::IsNullOrEmpty($url)) {
        Write-Host "`nProcessing URL: $url"

        # Extract the domain from the URL
        $domain = Get-DomainFromUrl -url $url

        if ($domain) {
            # Query VirusTotal for the URL
            $vtUrl = "https://www.virustotal.com/vtapi/v2/url/report"
            $params = @{
                apikey = $apiKey
                resource = $url
            }

            try {
                # Send the request and get the response from VirusTotal
                $response = Invoke-RestMethod -Uri $vtUrl -Method Get -Body $params

                # Check the response code from VirusTotal
                if ($response.response_code -eq 1) {
                    # Display the scan results
                    Write-Host "`n--- VirusTotal Scan Results for URL: $url ---"
                    Write-Host "Scan Date      : $($response.scan_date)"
                    Write-Host "Positives      : $($response.positives)"
                    Write-Host "Total Scanners : $($response.total)"
                    Write-Host "VirusTotal Link: $($response.permalink)"
                } else {
                    Write-Host "No report found for URL: $url"
                }
            } catch {
                Write-Error "Error querying VirusTotal API for URL: $url"
            }

            # Perform WHOIS lookup for the domain
            Get-WhoisInfo -domain $domain
        }
    }
}

Write-Host "`nURL scanning and WHOIS lookups completed."
